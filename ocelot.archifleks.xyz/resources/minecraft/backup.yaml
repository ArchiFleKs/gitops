---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: minecraft-backup
  namespace: minecraft
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: minecraft
  name: minecraft-backup
rules:
- apiGroups: ["apps"]
  resources: ["deployments", "deployments/scale"]
  resourceNames: ["minecraft"]
  verbs: ["get", "watch", "list", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: minecraft-backup
  namespace: minecraft
subjects:
- kind: ServiceAccount
  name: minecraft-backup
  namespace: minecraft
roleRef:
  kind: Role
  name: minecraft-backup 
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: minecraft-backup
  namespace: minecraft
spec:
  schedule: "0 4 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: minecraft-backup
            image: archifleks/aws-kubectl
            workingDir: /minecraft
            env:
            - name: AWS_ACCESS_KEY_ID
              value: AKIASLDLA3PKCNHDUKZX
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-credentials
                  key: AWS_SECRET_ACCESS_KEY
            - name: AWS_REGION
              value: eu-west-3
            command:
            - /bin/bash
            - -c
            - |
              #! /bin/bash
              set -o errexit
              set -o pipefail
              set -o nounset
              DATE=$(date +%F-%H:%M)
              echo -e "Starting backup..."
              kubectl -n minecraft scale deployment.apps minecraft --replicas 0
              ATTEMPTS=0
              ROLLOUT_STATUS_CMD="kubectl rollout status deployment.apps/minecraft -n minecraft"
              until $ROLLOUT_STATUS_CMD || [ $ATTEMPTS -eq 60 ]; do
                $ROLLOUT_STATUS_CMD
                ATTEMPTS=$((attempts + 1))
                sleep 10
              done
              tar --exclude='/minecraft/plugins/dynmap' -zcvf /minecraft-backup/minecraft-$DATE.tar.gz /minecraft
              kubectl -n minecraft scale deployment.apps minecraft --replicas 1
              aws s3 cp /minecraft-backup/minecraft-$DATE.tar.gz s3://aa-minecraft-backup/.
              echo -e "Backup successful."
            volumeMounts:
            - mountPath: /minecraft
              name: minecraft-data
            - mountPath: /minecraft-backup
              name: minecraft-backup
          volumes:
          - hostPath:
              path: /srv/configs/minecraft
            name: minecraft-data
          - hostPath:
              path: /srv/configs/minecraft-backup
            name: minecraft-backup
          restartPolicy: OnFailure
          serviceAccount: minecraft-backup
